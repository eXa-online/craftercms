
# This pipeline definition assumes a gitlab-runner using a docker executor with
# access to the host's /var/run/docker.sock file:
#
# --- snip ---
# [[runners]]
# name = "docker-runner"
# url = "http://um-cmsgitlab1.support.ecom.thalia.de/"
# token = "..."
# executor = "docker"
# [runners.docker]
#   tls_verify = false
#   image = "docker:stable"
#   privileged = false
#   disable_cache = false
#   volumes = ["/cache", "/var/run/docker.sock:/var/run/docker.sock"]
#   shm_size = 0
# [runners.cache]
# --- snap ---

image: maven:3-jdk-8-alpine

variables:
  GRADLE_OPTS: "-Dcrafter.git.shallowClone=true"
  GRADLE_USER_HOME: "/cache/.gradle"
  MAVEN_OPTS: "-Dmaven.repo.local=/cache/.m2/repository -DinteractiveMode=false"
  TERM: dumb

stages:
  - build
  - publish
  - deploy

before_script:
  - mkdir downloads || true
  - ln -s $CI_PROJECT_DIR/downloads /etc/apk/cache
  - apk update && apk add bash coreutils git docker && apk cache clean
  - docker info

build:
  stage: build
  script:
    - ./gradlew init build deploy
    - ./docker/prepare authoring
    - ./docker/prepare delivery
    - ./docker/build authoring
    - ./docker/build delivery
  cache:
    paths:
      - downloads/

publish:
  stage: publish
  script:
    - docker login -u "$HARBOR_USER" -p "$HARBOR_PASSWORD" docker-harbor1.support.ecom.thalia.de
    - ./docker/publish authoring
    - ./docker/publish delivery
  only:
    - master

deploy to dev:
  stage: deploy
  before_script:
    - apk update && apk add bash openssh-client
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - echo "$SSH_PRIVATE_KEY"| tr -d '\r'  > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/known_hosts ~/.ssh/id_rsa
  script:
    - ./docker/deploy authoring dev
    - ./docker/deploy delivery dev
  environment:
    name: dev
    url: http://docker-cmsauthoring1.dev.ecom.thalia.de
  when: manual

deploy to integ:
  stage: deploy
  before_script:
    - apk update && apk add bash openssh-client
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/known_hosts ~/.ssh/id_rsa
  script:
    - ./docker/deploy authoring integ
    - ./docker/deploy delivery integ 1
    - ./docker/deploy delivery integ 2
  environment:
    name: integ
    url: http://docker-cmsauthoring1.integ.ecom.thalia.de
  when: manual
